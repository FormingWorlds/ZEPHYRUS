name: Tests for ZEPHYRUS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Setup system
        run: |
          sudo apt-get update
          sudo apt-get install libnetcdff-dev netcdf-bin

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        id: cache-virtualenv
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

      - name: Build ZEPHYRUS
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: |
          python -m pip install -e .[develop]

      - uses: actions/cache@v3
        id: cache-fwl-data
        with:
          path: /home/runner/work/fwl_data
          key: fwl-data-1

      - name: Test with pytest
        run: |
          export FWL_DATA="/home/runner/work/fwl_data"
          coverage run -m pytest

      - name: Report coverage
        run: |
          coverage json
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
          echo $'\n```' >> $GITHUB_STEP_SUMMARY
          coverage report >> $GITHUB_STEP_SUMMARY
          echo $'\n```' >> $GITHUB_STEP_SUMMARY

      - name: Make coverage badge
        if: ${{ github.ref == 'refs/heads/main' && matrix.python-version == '3.10' }}
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: 152250f71914339d24537977e64aba55
          filename: covbadge_zephyrus.svg
          label: Coverage
          message: ${{ env.total }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total }}
